---
# Copyright 2016, JinkIT, and it's Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# First, create a sdn bootstrap file:
- name: check if sdn deployment is deployed
  raw: stat /etc/kubernees/halcyon/network/.bootstrapped
  register: sdn_need_bootstrap
  ignore_errors: true

# If neccisary, bootrap an Kubernetes SDN:
- include: kube-calico.yml
  when: kube_sdn == "calico" and kube_sdn_deploy and sdn_need_bootstrap
  ignore_errors: true
  register: deploy-calico

- include: kube-canal.yml
  when: kube_sdn == "canal" and kube_sdn_deploy and sdn_need_bootstrap
  ignore_errors: true
  register: deploy-canal

- include: kube-romana.yml
  when:
    - kube_sdn == "romana"
    - kube_sdn_deploy == true
    - sdn_need_bootstrap
  ignore_errors: true
  register: deploy-romana

- include: kube-weave.yml
  when:
    - kube_sdn == "romana"
    - kube_sdn_deploy == true
    - sdn_need_bootstrap
  ignore_errors: true
  register: deploy-weave

# After successful deployment, create bootstrap artifact:
- name: ensure sdn bootstrap directory exists
  file: path=/etc/kubernees/halcyon/network state=directory

- name: deploy sdn bootstrapped artifact
  template:
    src: bootstrap-sdn.j2
    dest: /etc/kubernees/halcyon/network/.bootstrapped
    backup: no
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  when: sdn_need_bootstrap
  ignore_errors: true
